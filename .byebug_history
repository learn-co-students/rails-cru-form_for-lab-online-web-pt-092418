exit
artist_path(@song.artist.id)
link_to @song.artist
<%= link_to @song.artist, artist_path(@song.artist.id) %>
exit
controller_name
exit
controller
controller_name
controller_name.classify.constantize.find(params[:id])
params[:id]
exit
@artist
exit
params.require(controller_name.singularize.to_sym).permit(*args)
exit
*args
exit
params.require(x).permit(args[x].keys.map(&:to_sym))
params.require(x).permit(args[x].keys.map(&:to_sym)
args[x].keys.map(&:to_sym)
x = controller_name.singularize.to_sym
x
args[x].keys.map(&:to_sym)
args
args.parameters
args.params
args.all
*args
args
exit
*args
exit
args[x].keys
args[x]
params.require(x).permit(args[x])
x = controller_name.singularize.to_sym
exit
x.permit(args[x])
x.permit(args)
x = params.require(controller_name.singularize.to_sym)
exit
params.require(controller_name.singularize.to_sym).permit(args)
params
args
exit
*args
exit
*args
exit
@artist
exit
exi
exit
params.require(x).permit(*args)
x = controller_name.singularize.to_sym
exit
*args
args
controller_name.singularize.to_sym
params.require(controller_name.singularize.to_sym).permit(:name,:bio)
params.require(controller_name.singularize.to_sym)
params.require(controller_name.singularize.to_sym)(params)
params.require(controller_name.singularize.to_sym)[params]
params.require(controller_name.singularize.to_sym)[:params]
params.require(controller_name.singularize.to_sym)[:name]
params.require(controller_name.singularize.to_sym)[name]
params.require(controller_name.singularize.to_sym)
strong_params(params)
params
*args
permit(params)
permit(params
params.require(controller_name.singularize.to_sym).permit(*args)
params.require(controller_name.singularize.to_sym)
strong_params(params)
params
strong_params
stron_params
exit
@artist
exit
@artist
exit
exi
controller_name.singularize
controller_name.singular
controller_name
controller_name.classify.downcase.to_sym
controller_name.classify.downcase
controller_name.classify
exit
controller_name.classify.constantize
controller_name.classify
controller_name
exit
self.class.nam.gsub('sController', '')
self.class.name.gsub('sController', '')
self.class.nam.gsub('sController', '')
self.class.gsub('sController', '')
self.class
self.class.gsub('Controller')
self
self.class.model
self.class
self.model
self
